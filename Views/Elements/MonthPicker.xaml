<UserControl x:Class="Samokat.Views.Elements.MonthPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Samokat.Views.Elements"
             xmlns:el="clr-namespace:Samokat.Views.Elements"
             xmlns:vm="clr-namespace:Samokat.ViewModels.Elements"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             x:Name="MonthPickerElement"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <vm:MonthPickerViewModel/>
    </UserControl.DataContext>
    <materialDesign:PopupBox x:Name="PickerPopup" PlacementMode="BottomAndAlignCentres" PopupMode="Click" StaysOpen="True">
        <materialDesign:PopupBox.ToggleContent>
            <materialDesign:PackIcon  Kind="AddBox"/>
        </materialDesign:PopupBox.ToggleContent>
        <Border BorderThickness="1" BorderBrush="#0869b6">
            <Grid Background="#252525">
                <StackPanel Orientation="Horizontal">
                    <ComboBox x:Name="MonthPicker_Month" SelectedIndex="{Binding Path=Current.Month, Mode=TwoWay  }" ItemsSource="{Binding Months}"  Margin="10,10,0,10" Width="100" Height="30"/>
                    <ComboBox x:Name="MonthPicker_Year" SelectedValue="{Binding Path=Current.Year, Mode=TwoWay }" ItemsSource="{Binding Years}" Margin="10,10,0,10" Width="100" Height="30"/>
                    <el:Button Margin="10" Width="30" Height="30" RoundMaskColor="#252525" Content="ОК" Cursor="Hand">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding ElementName=MonthPickerElement, Path=Command}" CommandParameter="{Binding Current}"/>
                                <i:ChangePropertyAction TargetObject="{Binding ElementName=PickerPopup}" PropertyName="IsPopupOpen" Value="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </el:Button>
                </StackPanel>
            </Grid>
        </Border>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Opened">
                <i:InvokeCommandAction Command="{Binding ResetCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </materialDesign:PopupBox>
</UserControl>
